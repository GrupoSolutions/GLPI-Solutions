1689365622
6853cdb0a5ac4162efe044318638b4e69c743637
a:1:{s:57:"count_Computer_State_e9fdad54-079f-481a-ae5f-87ebb4972bed";s:7381:"      <style>
         #chart-dashboard_card_central_4cbee666f824f7a04c9347338f7de708753385b5 {
            background-color: #d5e1ec;
            color: #4c7da9
         }

         .theme-dark #chart-dashboard_card_central_4cbee666f824f7a04c9347338f7de708753385b5 {
            background-color: #0d151c;
            color: #4c7da9;
         }

         #chart-dashboard_card_central_4cbee666f824f7a04c9347338f7de708753385b5 .ct-label {
            fill: #4c7da9;
            color: #4c7da9;
         }

         .theme-dark #chart-dashboard_card_central_4cbee666f824f7a04c9347338f7de708753385b5 .ct-label {
            fill: #4c7da9;
            color: #4c7da9;
         }

         
      </style>
      <div style="height: 100%">
         <div class="card g-chart pie donut filter-dates filter-dates_mod filter-location filter-manufacturer filter-group_tech filter-user_tech filter-state"
            id="chart-dashboard_card_central_4cbee666f824f7a04c9347338f7de708753385b5">
            <div class="chart ct-chart"></div>
            <span class="main-label">Computadores por Status</span>
            <i class="main-icon ti ti-subtask"></i>
         </div>
      </div><script type="text/javascript">
//<![CDATA[

      $(function () {
         var chart = new Chartist.Pie(Dashboard.getActiveDashboard().element.find('#chart-dashboard_card_central_4cbee666f824f7a04c9347338f7de708753385b5 .chart')[0], {
            labels: ["OK","COM DEFEITO","PENDENTE","ESTOQUE CANIBALIZA\u00c7\u00c3O","AGUARDA ANALISE T.I","AGUARDANDO COMPRA DE PE\u00c7AS","CARCA\u00c7A QUEBRADA"],
            series: [{"meta":"OK","value":159,"url":"\/front\/computer.php?reset&criteria%5B0%5D%5Bfield%5D=31&criteria%5B0%5D%5Bsearchtype%5D=equals&criteria%5B0%5D%5Bvalue%5D=4&reset=reset"},{"meta":"COM DEFEITO","value":12,"url":"\/front\/computer.php?reset&criteria%5B0%5D%5Bfield%5D=31&criteria%5B0%5D%5Bsearchtype%5D=equals&criteria%5B0%5D%5Bvalue%5D=3&reset=reset"},{"meta":"PENDENTE","value":9,"url":"\/front\/computer.php?reset&criteria%5B0%5D%5Bfield%5D=31&criteria%5B0%5D%5Bsearchtype%5D=equals&criteria%5B0%5D%5Bvalue%5D=8&reset=reset"},{"meta":"ESTOQUE CANIBALIZA\u00c7\u00c3O","value":3,"url":"\/front\/computer.php?reset&criteria%5B0%5D%5Bfield%5D=31&criteria%5B0%5D%5Bsearchtype%5D=equals&criteria%5B0%5D%5Bvalue%5D=7&reset=reset"},{"meta":"AGUARDA ANALISE T.I","value":2,"url":"\/front\/computer.php?reset&criteria%5B0%5D%5Bfield%5D=31&criteria%5B0%5D%5Bsearchtype%5D=equals&criteria%5B0%5D%5Bvalue%5D=9&reset=reset"},{"meta":"AGUARDANDO COMPRA DE PE\u00c7AS","value":1,"url":"\/front\/computer.php?reset&criteria%5B0%5D%5Bfield%5D=31&criteria%5B0%5D%5Bsearchtype%5D=equals&criteria%5B0%5D%5Bvalue%5D=6&reset=reset"},{"meta":"CARCA\u00c7A QUEBRADA","value":1,"url":"\/front\/computer.php?reset&criteria%5B0%5D%5Bfield%5D=31&criteria%5B0%5D%5Bsearchtype%5D=equals&criteria%5B0%5D%5Bvalue%5D=5&reset=reset"}],
         }, {
            width: '100%',
            chartPadding: 4,
            donut: true,
            
            donutSolid: true,
            showLabel: true,
            labelInterpolationFnc: function(value) {
               return '187';
            },
         
            
            donutWidth: '50%',
            plugins: [
               Chartist.plugins.tooltip({
                  appendToBody: true,
                  class: 'dashboard-tooltip'
               })
            ]
         });


         chart.on('draw', function(data) {
            // animate
            if (data.type === 'slice') {
               // set url redirecting on slice
               var url = _.get(data, 'series.url') || "";
               if (url.length > 0) {
                  data.element.attr({
                     'data-clickable': true
                  });
                  data.element._node.onclick = function() {
                     if (!Dashboard.getActiveDashboard().edit_mode) {
                        window.location = url;
                     }
                  }
               }

               // Get the total path length in order to use for dash array animation
               var pathLength = data.element._node.getTotalLength();

               // Set a dasharray that matches the path length as prerequisite to animate dashoffset
               data.element.attr({
                  'stroke-dasharray': pathLength + 'px ' + pathLength + 'px'
               });

               // Create animation definition while also assigning an ID to the animation for later sync usage
               var animationDefinition = {
                  'stroke-dashoffset': {
                     id: 'anim' + data.index,
                     dur: 1000,
                     from: -pathLength + 'px',
                     to:  '0px',
                     easing: Chartist.Svg.Easing.easeOutQuint,
                     // We need to use `fill: 'freeze'` otherwise our animation will fall back to initial (not visible)
                     fill: 'freeze'
                  }
               };

               // We need to set an initial value before the animation starts as we are not in guided mode which would do that for us
               data.element.attr({
                  'stroke-dashoffset': -pathLength + 'px'
               });

               // We can't use guided mode as the animations need to rely on setting begin manually
               // See http://gionkunz.github.io/chartist-js/api-documentation.html#chartistsvg-function-animate
               data.element.animate(animationDefinition, false);
            }

            // donut center label
            if (data.type === 'label') {
               if (data.index === 0) {
                  var width = data.element.root().width() / 2;
                  var height = data.element.root().height() / 2;
                  var fontsize = ((height / 1) / (1.3 * "187".length));
                  data.element.attr({
                     dx: width,
                     dy: height - (4 / 2),
                     'style': 'font-size: '+fontsize,
                  });

                  // apend real total
                  var text = new Chartist.Svg('title');
                  text.text("187");
                  data.element.append(text);
               } else {
                  data.element.remove();
               }
            }

            // fade others bars on one mouseouver
            chart.on('created', function(bar) {
               $('#chart-dashboard_card_central_4cbee666f824f7a04c9347338f7de708753385b5 .ct-series')
                  .mouseover(function() {
                     $(this).parent().children().addClass('disable-animation');
                     $(this).addClass('mouseover');
                     $(this).siblings()
                        .addClass('notmouseover');

                     $('#chart-dashboard_card_central_4cbee666f824f7a04c9347338f7de708753385b5 .ct-label')
                        .addClass('fade');
                  })
                  .mouseout(function() {
                     $(this).removeClass('mouseover');
                     $(this).siblings()
                        .removeClass('notmouseover');

                     $('#chart-dashboard_card_central_4cbee666f824f7a04c9347338f7de708753385b5 .ct-label')
                        .removeClass('fade');
                  });
            });
         });
      });

//]]>
</script>";}